os: Visual Studio 2015

environment:
  matrix:
    - PYTHON: C:\Python36
      RELEASE_ONLY_TARGET: true
    - PYTHON: C:\Python36-x64
      RELEASE_ONLY_TARGET: false
    - PYTHON: C:\Python37
      RELEASE_ONLY_TARGET: true
    - PYTHON: C:\Python37-x64
      RELEASE_ONLY_TARGET: false
      CHECK_STYLE: true
    - PYTHON: C:\Python38
      RELEASE_ONLY_TARGET: true
    - PYTHON: C:\Python38-x64
      RELEASE_ONLY_TARGET: false
  PYPI_PASSWORD:
    secure: UekbvbY3VJX53NJLchbcY+5ZfdoQQ8LwAIR+9SlacvjWGlayfn1+WF9TtIy0koc8

for:
  -
    matrix:
      only:
        - RELEASE_ONLY_TARGET: true

    skip_non_tags: true

install:
  - choco install winfsp -y --pre --version=1.7.20038-pre
  - git --no-pager log -n2
  - echo %APPVEYOR_REPO_COMMIT%
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;;%PATH%
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  - python -m pip install --upgrade pip
  - pip install -r requirements-dev.txt
  - appveyor DownloadFile https://github.com/billziss-gh/winfsp/releases/download/v1.5/winfsp-tests-1.5.20002.zip -FileName %PYTHON%\Scripts\winfsp-tests.zip
  - 7z x %PYTHON%\Scripts\winfsp-tests.zip -o%PYTHON%\Scripts\

before_build:
  - ps: if($env:DEBUG -eq "true") { iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')) }

build_script:
  - ps: |
      if($env:CHECK_STYLE -eq "true") {
        Invoke-Expression "pre-commit run --all-files"
        if($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode )  }
      }
  - pip install .[test]

test_script:
  # --doctest-modules: test win32_filetime module using doctest
  # -vvv: very verbose, much convinience
  # --cov: produce coverage for codecov
  # --log-level INFO: memfs produces useful INFO logs for debugging
  - pytest --pyargs winfspy --doctest-modules -vvv --log-level INFO --cov

after_test:
  - python setup.py bdist_wheel

artifacts:
  path: 'dist/*.whl'

deploy_script:
  - echo "Starting Artifact Deployment"
  # populate pypirc file for twine
  - echo [distutils]                                  > %USERPROFILE%\\.pypirc
  - echo index-servers =                             >> %USERPROFILE%\\.pypirc
  - echo     pypi                                    >> %USERPROFILE%\\.pypirc
  - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
  - echo username=touilleMan                         >> %USERPROFILE%\\.pypirc
  - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc
  # upload to pypi for windows
  - set PATH=%BK_PATH%
  - set HOME=%USERPROFILE%
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true") { Invoke-Expression "twine upload --verbose --skip-existing dist/*.whl" } Else { write-output "Not on a tag, won't deploy to pypi"}
  - echo "Finished Artifact Deployment"

on_success:
  - pip install -U --user codecov
  - python -m codecov
